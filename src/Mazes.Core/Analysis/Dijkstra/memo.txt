// Copyright 2020 Patrizio Amella. All rights reserved. See License file in the project root for more information.

type Tracker<'Key, 'Priority when 'Key : equality and 'Priority :> IComparable<'Priority>> =
    {
        Queue : Dictionary<'Key, 'Priority>
    }
    
    member this.Add key priority =
        if this.Queue.ContainsKey(key) then
            ()
        else
            this.Queue.Add(key, priority)

    member this.HasItems =
        this.Queue.Count > 0

    member this.Pop =
        let key = this.Queue |> Seq.head
        this.Queue.Remove(key.Key) |> ignore
        (key.Key, key.Value)

    static member createEmpty =
        { Queue = Dictionary<'Key, 'Priority>() }